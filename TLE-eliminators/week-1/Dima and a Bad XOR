// Problem: B. Dima and a Bad XOR
// Contest: Codeforces - Codeforces Round 553 (Div. 2)
// URL: https://codeforces.com/contest/1151/problem/B
// Memory Limit: 256 MB
// Time Limit: 1000 ms
// 
// Powered by CP Editor (https://cpeditor.org)

#include <bits/stdc++.h>
#include <iostream>
using namespace std;
#define utkarsh 1
#define JAI ios_base::sync_with_stdio(false);
#define SHREE cin.tie(NULL);
#define RAM cout.tie(NULL);
using ll= long long;
using sg=string;
using lld= long double;
using ull= unsigned long long;
const lld pi= 3.141592653589793238;
const ll mod=1e9+7;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<vll> vvll;
typedef vector<string> vs;
typedef unordered_map<ll,ll> umll;
typedef map<ll,ll> mll;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define fl(i,n) for(int i=0;i<n;i++)
#define rl(i,m,n) for(int i=n;i>=m;i--)
#define py cout<<"YES\n";
#define pm cout<<"-1\n";
#define pn cout<<"NO\n";
#define tl(n)  ll n;cin>>n;
#define ts(n)  sg n;cin>>n;
#define vr(v) v.begin(),v.end()
#define rv(v) v.end(),v.begin()
#define flp(i,a,b) for(int i = a; i <= b; i++)
 
//Debug
#ifdef utkarsh
#define debug(x) cerr << #x<<" "; cerr<<x<<" "; cerr << endl;
#else
#define debug(x);
#endif
 
// Operator overloads
template<typename T1, typename T2> // cin >> pair<T1, T2>
istream& operator>>(istream &istream, pair<T1, T2> &p) { return (istream >> p.first >> p.second); }
template<typename T> // cin >> vector<T>
istream& operator>>(istream &istream, vector<T> &v){for (auto &it : v)cin >> it;return istream;}
template<typename T1, typename T2> // cout << pair<T1, T2>
ostream& operator<<(ostream &ostream, const pair<T1, T2> &p) { return (ostream << p.first << " " << p.second); }
template<typename T> // cout << vector<T>
ostream& operator<<(ostream &ostream, const vector<T> &c) { for (auto &it : c) cout << it << " "; return ostream; }
 
// Utility functions
template <typename T>
void print(T &&t)  { cout << t << "\n"; }
void printarr(ll arr[], ll n){fl(i,n) cout << arr[i] << " ";cout << "\n";}
template<typename T>
void printvec(vector<T>v){ll n=v.size();fl(i,n)cout<<v[i]<<" ";cout<<"\n";}
template<typename T>
ll sumvec(vector<T>v){ll n=v.size();ll s=0;fl(i,n)s+=v[i];return s;}




void square(){
    tl(r);tl(c);
    vector<vll>v(r+1,vll(c+1));
    vll ans(r+1);
    ll x=0;
    flp(i,1,r){
    	
    	flp(j,1,c){
    		cin>>v[i][j];
    		// x^=v[i][1];  
    		ans[i]=1;		
    	}   	
    } 
    flp(i,1,r){
    		x=x^v[i][1];
    	
    }
 
    if(x!=0){
    	cout<<"TAK"<<endl;
    	flp(i,1,r){
    		cout<<ans[i]<<" ";
    	}
    	return;
    }
    
    bool flag = 0;
    flp(i,1,r){
    	flp(j,2,c){
    		if(v[i][1]!=v[i][j]){
    			x=x^v[i][1]^v[i][j];
    			ans[i]=j;
    			flag = 1;
    			break;
    		}
    	}
    	if(flag){
    		break;
    	}
    }
    if(x==0){
    	cout<<"NIE";
    	return;
    }

    cout<<"TAK"<<endl;

    flp(i,1,r){
    	cout<<ans[i]<<" ";
    }
    
    
    
    // vector<vll> dp(r+1,vll(c));
    // fl(i,c){
    	// dp[1][i]=v[1][i];
    // }
//      
    // vector<vll>path(c);
//     
    // flp(i,2,r){
    	// fl(j,c){
    		// ll num = v[i][j];
            // path[j].pb(j+1);
    		// fl(k,c){
    			// if(v[i-1][k]||num>0){
    				// num=v[i-1][k];
    				// path[j].pop_back();
    				// path[j].pb(k+1);
    				// break;
    			// }
    		// }    		
    		// dp[i][j]=v[i][j]^num;
    	// }
    // }
//     
    // fl(i,c){
    	// if(dp[r][i]!=0){
    		// cout<<"TAK"<<endl;
    		// ll o=path[i].size();
    		// fl(j,o){
    			// cout<<path[i][j]<<" ";
    		// }
    		// cout<<i+1;
    		// return;
    	// }
    // }
//     
    // cout<<"NIE"<<endl;
    
    // fl(i,c){
    	// ll h = path[i].size();
    	// fl(j,h){
    		// cout<<path[i][j]<<" ";
    	// }
    	// cout<<endl;
    // }
 
     
 }

int main()
{
    JAI SHREE RAM
    int n = 1;
    // cin>>n;
    while(n--){
       square();
    } 

}


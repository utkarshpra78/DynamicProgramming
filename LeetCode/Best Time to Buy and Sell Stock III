//https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/?envType=list&envId=55af7bu7

class Solution {
public:
    int f(int ind,int check,int k,vector<int>&price,vector<vector<vector<int>>>&dp){
        if(ind>=price.size()||k>=2){
            return 0;           
        }

        if(dp[ind][check][k]!=-1){
            return dp[ind][check][k];
        }
        int profit=0;

        if(check){
            profit=max(-price[ind]+f(ind+1,0,k,price,dp),f(ind+1,1,k,price,dp));
        }
        else{
            profit=max(price[ind]+f(ind+1,1,k+1,price,dp),f(ind+1,0,k,price,dp));
        }
        return dp[ind][check][k]=profit;
    }

    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        int k=2;
        vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(k+2,-1)));
            
        return f(0,1,0,prices,dp); 
    }
};

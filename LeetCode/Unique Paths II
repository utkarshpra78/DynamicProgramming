//https://leetcode.com/problems/unique-paths-ii/description/?envType=list&envId=55ajm50i

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int n=obstacleGrid.size();
        int m=obstacleGrid[0].size();

        vector<vector<int>>dp(n,vector<int>(m,0));
        for(int i=0;i<m;i++){
            if(obstacleGrid[0][i]){
               break;
            }
            else{
                dp[0][i]=1;
            }
        }

        for(int i=1;i<n;i++){
            for(int j=0;j<m;j++){
                if(obstacleGrid[i][j]){
                    dp[i][j]=0;
                    continue;
                }
                int a=0;
                if(i-1>=0){
                    a+=dp[i-1][j];
                }
                if(j-1>=0){
                    a+=dp[i][j-1];
                }
                dp[i][j]=a;
            }
        }
        return dp[n-1][m-1];
    }
};
